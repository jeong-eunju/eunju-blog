{
  "hash": "7a3e0add040ec7523f5844df9957dd8a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"palmerpenguins 데이터 분석\"\nauthor: \"정은주\"\ndate: \"2025-03-07\"\nformat: html\njupyter: python3\n---\n\n\n\n### 팔머 펭귄 데이터 분석 실습(8조 이주형, 이창혁, 정은주)\n![](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRN0a0aHzCUujR1EMQFoR3U6DTZXjXKs8kVpR7vuVj3dRRTnRlSC4QZVqNUlMwZxM6FKNs&usqp=CAU){fig-align=\"center\" fig-width=100%}\n<br>\n\n다음과 같이 데이터를 로드하여 사용\n\n::: {#b97e51f3 .cell execution_count=1}\n``` {.python .cell-code}\n# pip install palmerpenguins\n\n# 데이터로드\nimport pandas as pd\nfrom palmerpenguins import load_penguins\npenguins = load_penguins()\n\npenguins.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 344 entries, 0 to 343\nData columns (total 8 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   species            344 non-null    object \n 1   island             344 non-null    object \n 2   bill_length_mm     342 non-null    float64\n 3   bill_depth_mm      342 non-null    float64\n 4   flipper_length_mm  342 non-null    float64\n 5   body_mass_g        342 non-null    float64\n 6   sex                333 non-null    object \n 7   year               344 non-null    int64  \ndtypes: float64(4), int64(1), object(3)\nmemory usage: 21.6+ KB\n```\n:::\n:::\n\n\ninfo()를 사용하여 불러진 데이터를 확인할 수 있음\n\n<br>\n\n1.  각 펭귄의 개체별 수 확인하기\n\n::: {#7c4cce98 .cell execution_count=2}\n``` {.python .cell-code}\npenguins['species'].value_counts()\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\nspecies\nAdelie       152\nGentoo       124\nChinstrap     68\nName: count, dtype: int64\n```\n:::\n:::\n\n\nAdelie 종 152, Gentoo 종 124, Chinstrap 종 68이 있는 것으로 확인 가능\n\n<br><br>\n\n2.  각 펭귄의 종별 특징 찾기\n\n    -   Adelie 펭귄\n\n::: {#fd2ac6b8 .cell execution_count=3}\n``` {.python .cell-code}\npenguins.loc[penguins['species'] == 'Adelie'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>151.000000</td>\n      <td>151.000000</td>\n      <td>151.000000</td>\n      <td>151.000000</td>\n      <td>152.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>38.791391</td>\n      <td>18.346358</td>\n      <td>189.953642</td>\n      <td>3700.662252</td>\n      <td>2008.013158</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.663405</td>\n      <td>1.216650</td>\n      <td>6.539457</td>\n      <td>458.566126</td>\n      <td>0.821780</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>32.100000</td>\n      <td>15.500000</td>\n      <td>172.000000</td>\n      <td>2850.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>36.750000</td>\n      <td>17.500000</td>\n      <td>186.000000</td>\n      <td>3350.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>38.800000</td>\n      <td>18.400000</td>\n      <td>190.000000</td>\n      <td>3700.000000</td>\n      <td>2008.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>40.750000</td>\n      <td>19.000000</td>\n      <td>195.000000</td>\n      <td>4000.000000</td>\n      <td>2009.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>46.000000</td>\n      <td>21.500000</td>\n      <td>210.000000</td>\n      <td>4775.000000</td>\n      <td>2009.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n```         \n-   Gentoo 펭귄\n```\n\n::: {#ff854af8 .cell execution_count=4}\n``` {.python .cell-code}\npenguins.loc[penguins['species'] == 'Gentoo'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>123.000000</td>\n      <td>123.000000</td>\n      <td>123.000000</td>\n      <td>123.000000</td>\n      <td>124.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>47.504878</td>\n      <td>14.982114</td>\n      <td>217.186992</td>\n      <td>5076.016260</td>\n      <td>2008.080645</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.081857</td>\n      <td>0.981220</td>\n      <td>6.484976</td>\n      <td>504.116237</td>\n      <td>0.792206</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>40.900000</td>\n      <td>13.100000</td>\n      <td>203.000000</td>\n      <td>3950.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>45.300000</td>\n      <td>14.200000</td>\n      <td>212.000000</td>\n      <td>4700.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>47.300000</td>\n      <td>15.000000</td>\n      <td>216.000000</td>\n      <td>5000.000000</td>\n      <td>2008.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>49.550000</td>\n      <td>15.700000</td>\n      <td>221.000000</td>\n      <td>5500.000000</td>\n      <td>2009.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>59.600000</td>\n      <td>17.300000</td>\n      <td>231.000000</td>\n      <td>6300.000000</td>\n      <td>2009.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n```         \n-   Chinstrap 펭귄\n```\n\n::: {#1151d0a7 .cell execution_count=5}\n``` {.python .cell-code}\npenguins.loc[penguins['species'] == 'Chinstrap'].describe()\n```\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>bill_length_mm</th>\n      <th>bill_depth_mm</th>\n      <th>flipper_length_mm</th>\n      <th>body_mass_g</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>68.000000</td>\n      <td>68.000000</td>\n      <td>68.000000</td>\n      <td>68.000000</td>\n      <td>68.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>48.833824</td>\n      <td>18.420588</td>\n      <td>195.823529</td>\n      <td>3733.088235</td>\n      <td>2007.970588</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>3.339256</td>\n      <td>1.135395</td>\n      <td>7.131894</td>\n      <td>384.335081</td>\n      <td>0.863360</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>40.900000</td>\n      <td>16.400000</td>\n      <td>178.000000</td>\n      <td>2700.000000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>46.350000</td>\n      <td>17.500000</td>\n      <td>191.000000</td>\n      <td>3487.500000</td>\n      <td>2007.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>49.550000</td>\n      <td>18.450000</td>\n      <td>196.000000</td>\n      <td>3700.000000</td>\n      <td>2008.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>51.075000</td>\n      <td>19.400000</td>\n      <td>201.000000</td>\n      <td>3950.000000</td>\n      <td>2009.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>58.000000</td>\n      <td>20.800000</td>\n      <td>212.000000</td>\n      <td>4800.000000</td>\n      <td>2009.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 3가지 종 특징 한눈에 비교하기\n\n::: {#55e90006 .cell execution_count=6}\n``` {.python .cell-code code-fold=\"true\"}\nade_desc = penguins.loc[penguins['species'] == 'Adelie'].describe()\ngen_desc = penguins.loc[penguins['species'] == 'Gentoo'].describe()\nchin_desc = penguins.loc[penguins['species'] == 'Chinstrap'].describe()\n\nade_mean = ade_desc.loc['mean']\ngen_mean = gen_desc.loc['mean']\nchin_mean = chin_desc.loc['mean']\n\npeng_mean = pd.concat([ade_mean, gen_mean, chin_mean], axis=1)\npeng_mean.columns= ['Adelie', 'Gentoo', 'Chinstrap']\npeng_mean\n```\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Adelie</th>\n      <th>Gentoo</th>\n      <th>Chinstrap</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>bill_length_mm</th>\n      <td>38.791391</td>\n      <td>47.504878</td>\n      <td>48.833824</td>\n    </tr>\n    <tr>\n      <th>bill_depth_mm</th>\n      <td>18.346358</td>\n      <td>14.982114</td>\n      <td>18.420588</td>\n    </tr>\n    <tr>\n      <th>flipper_length_mm</th>\n      <td>189.953642</td>\n      <td>217.186992</td>\n      <td>195.823529</td>\n    </tr>\n    <tr>\n      <th>body_mass_g</th>\n      <td>3700.662252</td>\n      <td>5076.016260</td>\n      <td>3733.088235</td>\n    </tr>\n    <tr>\n      <th>year</th>\n      <td>2008.013158</td>\n      <td>2008.080645</td>\n      <td>2007.970588</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n\n\nAdelie 펭귄은 **bill_length_mm의 평균**이 38.79로 **가장 짧은 편**이다.\n\nGentoo 펭귄은 **body_mass_g의 평균**이 5076.01로 **가장 무겁**다. Gentoo 펭귄은 **flipper_length_mm의 길이의 평균**이 217.18로 **가장 길다**.\n\nChinstrap 펭귄은 수치 데이터로 **뚜렷한 특징을 찾을 수 없다**.\n\n\n<br><br>\n\n3.  각 펭귄의 성별분포 확인하기\n\n::: {#fe81188e .cell execution_count=7}\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adelie</th>\n      <th>gentoo</th>\n      <th>chinstrap</th>\n    </tr>\n    <tr>\n      <th>sex</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>male</th>\n      <td>73</td>\n      <td>61</td>\n      <td>34</td>\n    </tr>\n    <tr>\n      <th>female</th>\n      <td>73</td>\n      <td>58</td>\n      <td>34</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\n성별은 고르게 분포되어 있다.\n\n<br><br>\n\n4.  각 펭귄별 서식지 분포 확인하기\n\n::: {#fdca1913 .cell execution_count=8}\n``` {.python .cell-code}\nadelie_island = penguins.loc[penguins['species'] == 'Adelie', 'island'].value_counts()\n```\n:::\n\n\n::: {#59291313 .cell execution_count=9}\n``` {.python .cell-code}\ngentoo_island = penguins.loc[penguins['species'] == 'Gentoo', 'island'].value_counts()\n```\n:::\n\n\n::: {#1b5b8792 .cell execution_count=10}\n``` {.python .cell-code}\nchinstrap_island = penguins.loc[penguins['species'] == 'Chinstrap', 'island'].value_counts()\n```\n:::\n\n\n### 3가지 종 서식지 분포 한눈에 확인하기\n\n::: {#5ff71496 .cell execution_count=11}\n``` {.python .cell-code}\ntotal_island = pd.concat([adelie_island,gentoo_island,chinstrap_island],axis=1)\ntotal_island.columns= ['adelie','gentoo','chinstrap']\ntotal_island = total_island.fillna(0)\ntotal_island\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adelie</th>\n      <th>gentoo</th>\n      <th>chinstrap</th>\n    </tr>\n    <tr>\n      <th>island</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Dream</th>\n      <td>56</td>\n      <td>0.0</td>\n      <td>68.0</td>\n    </tr>\n    <tr>\n      <th>Torgersen</th>\n      <td>52</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Biscoe</th>\n      <td>44</td>\n      <td>124.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n<br>\nAdelie 펭귄은 **Dream, Torgersen, Biscoe 섬에 고루 서식**한다.\nGentoo 펭귄 **Biscoe 섬에만 서식**한다.\nChinstrap 펭귄은 **Dream 섬에만 서식**한다.\n\n<br><br>\n\n## 결과 요약\n\n<br>\n\n+---------------+----------------------------------------------------+\n| 종류          | 특징                                               |\n+===============+====================================================+\n| Adelie 펭귄   | bill_length_mm의 평균이 38.79로 가장 짧은 편       |\n|               |                                                    |\n|               | Dream, Torgersen, Biscoe 섬에 고루 서식            |\n+---------------+----------------------------------------------------+\n| Gentoo 펭귄   | body_mass_g의 평균이 5076.01로 가장 무거움         |\n|               |                                                    |\n|               | flipper_length_mm의 길이의 평균이 217.18로 가장 김 |\n|               |                                                    |\n|               | Biscoe 섬에만 서식                                 |\n+---------------+----------------------------------------------------+\n| Chinstrap     | Dream 섬에만 서식                                  |\n+---------------+----------------------------------------------------+\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}